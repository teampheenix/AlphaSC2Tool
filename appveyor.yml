version: '{branch}-{build}'

environment:

    matrix:
        - JOB: "3.8 64-bit"
          TOXENV: "py38"
          PYTHON: "C:\\Python38-x64"
          PYTHON_VERSION: "3.8"
          PYTHON_ARCH: "64"

platform:
  - x64

init:
    # Used to RDP into build worker
    #- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
    - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
    - "ECHO \"%APPVEYOR_SCHEDULED_BUILD%\""

    - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }

install:
    # Install Python (from the official .msi of https://python.org) and pip when
    # not already installed.
    - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

    # Prepend newly installed Python to the PATH of this build (this cannot be
    # done from inside the powershell script as it would require to restart
    # the parent CMD process).
    - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

    # Check that we have the expected version and architecture for Python
    - "python --version"
    - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

    # Upgrade to the latest version of pip to avoid it displaying warnings
    # about it being out of date.
    - "python -m pip install --upgrade pip"
    - "pip install --upgrade wheel"
    - "pip --version"
    - "pip install -r requirements.txt -U"
    - "pip install -r tests/requirements.txt -U"
    - "pip install -e ."

build: none

on_finish:
  # Used to RDP into build worker
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

test_script:
    # Split tests into several subprocesses.
    - "pytest -v --aligulac_api_key=%aligulac_api_key%"
